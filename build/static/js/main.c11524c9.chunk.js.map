{"version":3,"sources":["types/index.ts","features/tezos/slice.tsx","features/tezos/selectors.tsx","libs/utils.ts","components/ConnectButton/index.tsx","components/DisconnectButton/index.tsx","components/CreateWillButton/CreateWillButton.tsx","components/Navbar.tsx","components/Beneficiary/Beneficiary.tsx","components/Distribution/Distribution.tsx","components/TokenAsset/index.tsx","components/Assets.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","app/store.tsx","index.tsx"],"names":["AvailableToken","initialState","Tezos","TezosToolkit","contract","undefined","wallet","userAddress","userBalance","storage","beaconConnection","contractAddress","publicToken","tokens","tokenBalances","selectedToken","selectedTokenDistribution","tokenDistribution","userProfile","tezosSlice","createSlice","name","reducers","setTezos","state","action","payload","setContract","setWallet","setUserAddress","setUserBalance","setStorage","setBeaconConnection","setPublicToken","setTokens","setTokenBalances","setSelectedToken","setSelectedTokenDistribution","setTokenDistribution","setUserProfile","actions","tezos","selectTezos","createSelector","selectWallet","selectUserAddress","selectUserBalance","selectBeaconConnection","selectContractAddress","selectTokenBalances","selectSelectedToken","selectTokenDistribution","selectUserProfile","fetchUserBalances","address","a","fetch","tokensWithBalanceReq","map","3754","BTCtz","3755","FLAME","3764","GIF","3759","wWETH","3760","GOT","json","tokensWithBalance","allTokens","tokenData","id","token","balance","decimals","metadata","icon","symbol","type","standard","toUpperCase","isApproved","console","log","filter","tk","ConnectButton","dispatch","useDispatch","useSelector","useState","publicTkn","setPublicTkn","setup","tz","getBalance","toNumber","at","get","connectWallet","requestPermissions","network","NetworkType","CUSTOM","rpcUrl","getPKH","useEffect","BeaconWallet","preferredNetwork","disableDefaultEvents","eventHandlers","BeaconEvent","PAIR_INIT","handler","defaultEventCallbacks","PAIR_SUCCESS","data","publicKey","setWalletProvider","client","getActiveAccount","onClick","className","DisconnectButton","disconnectWallet","tezosTK","removeAllAccounts","removeAllPeers","destroy","CreateWillButton","distribution","createOrUpdateWill","distrib","find","tkBal","tokenSymbol","distributionList","dis","Record","beneficiary_address","Address","percentage","Nat","asset_id","String","token_details","token_type","is_fungible","Bool","amount","distribution_list","List","token_asset_list2","createUserMethod","methods","createUserParam","token_assets","uncapped","trigger_time","Date","now","toISOString","send","storageLimit","gasLimit","fee","op","confirmation","length","Navbar","extendTime","startOfDay","setUTCHours","getTime","newTime","oneDay","updateUserMethod","updateTriggerParam","src","alt","Math","floor","parse","Number","Beneficiary","beneficiaries","setBeneficiaries","percent","setPercent","setAddress","placeholder","value","onChange","e","target","updatedBeneficiaries","beneficiary","handleAddressChange","handlePercentChange","Distribution","approved","setApproved","currentTokenContract","setCurrentTokenContract","loading","setLoading","balances","currentToken","approveToken","approve","approveMethod","tokenContract","allowances","getTokenContract","role","every","ben","reduce","prev","curr","tkDistrib","approvedAmount","findIndex","tkDis","newTokenDistrib","tkDist","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","newBeneficiaries","TokenAsset","tokenBalance","dist","Assets","userTokenBalances","setToken","newToken","tkDisIndex","handleTokenAssetClick","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","tezosReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+WAMYA,E,wHCiBCC,EAA2B,CACpCC,MAAO,IAAIC,IAAa,mCACxBC,cAAUC,EACVC,OAAQ,KACRC,iBAAaF,EACbG,YAAa,EACbC,QAAS,KACTC,kBAAkB,EAClBC,gBAAiB,uCACjBC,YAAa,GACbC,YAAQR,EACRS,cAAe,GACfC,cAAe,KACfC,0BAA2B,KAC3BC,uBAAmBZ,EACnBa,YAAa,MAGXC,EAAaC,YAAY,CAC3BC,KAAM,QACNpB,aAAcA,EACdqB,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAMtB,MAAQuB,EAAOC,SAEzBC,YAAa,SAACH,EAAOC,GACjBD,EAAMpB,SAAWqB,EAAOC,SAE5BE,UAAW,SAACJ,EAAOC,GACfD,EAAMlB,OAASmB,EAAOC,SAE1BG,eAAgB,SAACL,EAAOC,GACpBD,EAAMjB,YAAckB,EAAOC,SAE/BI,eAAgB,SAACN,EAAOC,GACpBD,EAAMhB,YAAciB,EAAOC,SAE/BK,WAAY,SAACP,EAAOC,GAChBD,EAAMf,QAAUgB,EAAOC,SAE3BM,oBAAqB,SAACR,EAAOC,GACzBD,EAAMd,iBAAmBe,EAAOC,SAEpCO,eAAgB,SAACT,EAAOC,GACpBD,EAAMZ,YAAca,EAAOC,SAE/BQ,UAAW,SAACV,EAAOC,GACfD,EAAMX,OAASY,EAAOC,SAE1BS,iBAAkB,SAACX,EAAOC,GACtBD,EAAMV,cAAgBW,EAAOC,SAEjCU,iBAAkB,SAACZ,EAAOC,GACtBD,EAAMT,cAAgBU,EAAOC,SAEjCW,6BAA8B,SAACb,EAAOC,GAClCD,EAAMR,0BAA4BS,EAAOC,SAE7CY,qBAAsB,SAACd,EAAOC,GAC1BD,EAAMP,kBAAoBQ,EAAOC,SAErCa,eAAgB,SAACf,EAAOC,GACpBD,EAAMN,YAAcO,EAAOC,Y,EAmBnCP,EAAWqB,QAdXjB,E,EAAAA,SACAI,E,EAAAA,YACAC,E,EAAAA,UACAC,E,EAAAA,eACAC,E,EAAAA,eACAC,E,EAAAA,WACAC,E,EAAAA,oBACAC,E,EAAAA,eAEAE,G,EADAD,U,EACAC,kBACAC,E,EAAAA,iBAEAE,G,EADAD,6B,EACAC,sBACAC,E,EAAAA,eAGWpB,IAAf,QCrGMA,EAAa,SAACK,GAAD,OAAsBA,EAAMiB,OAASxC,GAE3CyC,EAAcC,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMtB,SAI1D0C,GAFiBD,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMpB,YAE9CuC,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMlB,WAE3DuC,EAAoBF,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMjB,eAEhEuC,EAAoBH,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMhB,eAIhEuC,GAFgBJ,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMf,WAEnCkC,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMd,qBAErEsC,EAAwBL,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMb,mBAMpEsC,GAJoBN,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMZ,eAEjD+B,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMX,UAErC8B,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMV,kBAElEoC,EAAsBP,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMT,iBAIlEoC,GAFkCR,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMR,6BAEpD2B,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMP,sBAEtEmC,EAAoBT,YAAe,CAACxB,IAAa,SAAAK,GAAK,OAAIA,EAAMN,e,2BF7BjElB,K,YAAAA,E,YAAAA,E,gBAAAA,E,kBAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,gBAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,gBAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,UAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,UAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,gBAAAA,E,YAAAA,E,cAAAA,E,UAAAA,E,UAAAA,E,gBAAAA,E,YAAAA,E,UAAAA,E,eAAAA,M,KGHL,IAAMqD,EAAiB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,+EAEUC,MAAM,4DAAD,OACwBF,EADxB,kBAFf,UAEnBG,EAFmB,OAKrBC,EAAY,CACZC,KAAO3D,EAAe4D,MACtBC,KAAO7D,EAAe8D,MACtBC,KAAO/D,EAAegE,IACtBC,KAAOjE,EAAekE,MACtBC,KAAOnE,EAAeoE,MAEtBX,EAZqB,iCAaWA,EAAqBY,OAbhC,cAafC,EAbe,OAcfC,EAAYD,EAAkBZ,KAAI,SAACc,GAAD,sBAAqB,CACzDC,GAAID,EAAUC,GACdnB,QAASkB,EAAUE,MAAMtE,SAASkD,QAClCqB,QAASH,EAAUG,QACnBC,UAAU,UAAAJ,EAAUE,MAAMG,gBAAhB,eAA0BD,UAA1B,UAAqCJ,EAAUE,MAAMG,gBAArD,aAAqC,EAA0BD,SAAW,EACpFE,MAAM,UAAAN,EAAUE,MAAMG,gBAAhB,eAA0BC,MAA1B,UAAiCN,EAAUE,MAAMG,gBAAjD,aAAiC,EAA0BC,KAAO,GACxEzD,MAAM,UAAAmD,EAAUE,MAAMG,gBAAhB,eAA0BxD,MAA1B,UAAiCmD,EAAUE,MAAMG,gBAAjD,aAAiC,EAA0BxD,KAAOqC,EAAIc,EAAUC,IACtFM,OAAQrB,EAAIc,EAAUC,IACtBO,KAAMR,EAAUE,MAAMO,SAASC,cAC/BC,YAAY,MAEhBC,QAAQC,IAAId,EAAUe,QAAO,SAACC,GAAD,MAAyB,UAAZA,EAAGP,SAzBxB,kBA0BdT,EAAUe,QAAO,SAACC,GAAD,MAAyB,UAAZA,EAAGP,SA1BnB,iCA4Bd,MA5Bc,iEAgCzBI,QAAQC,IAAR,MAhCyB,kBAiClB,MAjCkB,0DAAH,sD,OC6HfG,EApGO,WACpB,IAAMC,EAAWC,cACXxF,EAAQyF,YAAYjD,GACpBpC,EAASqF,YAAY/C,GAHY,EAKLgD,mBAAwB,IALnB,mBAKhCC,EALgC,KAKrBC,EALqB,KAOjCC,EAAK,uCAAG,WAAOxF,GAAP,uBAAAgD,EAAA,6DACZkC,EAAS5D,EAAetB,IADZ,SAGUL,EAAM8F,GAAGC,WAAW1F,GAH9B,cAGNoE,EAHM,OAKZc,EAAS3D,EAAe6C,EAAQuB,aALpB,SAOgB7C,EAAkB9C,GAPlC,cAONO,EAPM,OAQZsE,QAAQC,IAAIvE,GAYZ2E,EAAStD,EAAiBrB,IApBd,UAqBWZ,EAAMI,OAAO6F,GAAG,wCArB3B,eAqBN/F,EArBM,OAsBZqF,EAAS9D,EAAYvB,IAtBT,UAwBeA,EAASK,UAxBxB,eAwBNA,EAxBM,OAyBZgF,EAAS1D,EAAWtB,IAzBR,UA2BcA,EAAO,MAAU2F,IAAI7F,GA3BnC,QA2BNW,EA3BM,OA4BZkE,QAAQC,IAAI,QAASnE,GACrBuE,EAASlD,EAAerB,IA7BZ,4CAAH,sDAgCLmF,EAAa,uCAAG,4BAAA9C,EAAA,sFAEZjD,QAFY,IAEZA,OAFY,EAEZA,EAAQgG,mBAAmB,CAC/BC,QAAS,CACPvB,KAAMwB,IAAYC,OAClBC,OAAQ,qCALM,8BAQQpG,QARR,IAQQA,OARR,EAQQA,EAAQqG,SARhB,YAQZpG,EARY,wCAUVwF,EAAMxF,GAVI,OAalBkF,EAASzD,GAAoB,IAbX,kDAelBoD,QAAQC,IAAR,MAfkB,0DAAH,qDAmDnB,OAhCAuB,qBAAU,WACR,sBAAC,gCAAArD,EAAA,6DACOjD,EAAS,IAAIuG,IAAa,CAC9BxF,KAAM,MACNyF,iBAAkBN,IAAYC,OAC9BM,sBAAsB,EACtBC,eAAa,mBACVC,IAAYC,UAAY,CACvBC,QAASC,IAAsBF,YAFtB,cAIVD,IAAYI,aAAe,CAC1BF,QAAS,SAACG,GAAD,OAAUxB,EAAawB,EAAKC,cAL5B,KASfnC,QAAQC,IAAI/E,GACZJ,EAAMsH,kBAAkBlH,GACxBmF,EAAS7D,EAAUtB,IAhBpB,SAkB6BA,EAAOmH,OAAOC,mBAlB3C,oDAoB6BpH,EAAOqG,SApBpC,eAoBSpG,EApBT,iBAqBSwF,EAAMxF,GArBf,QAsBGkF,EAASzD,GAAoB,IAtBhC,2CAAD,KAyBC,IAEH4E,qBAAU,WACRnB,EAASxD,EAAe4D,MACvB,CAACC,IAGF,wBACE6B,QAAStB,EACTuB,UAAU,2NAFZ,6BClHJ,IA8BeC,EA9BU,WAErB,IAAMpC,EAAWC,cACXpF,EAASqF,YAAY/C,GACrBrC,EAAcoF,YAAY9C,GAE1BiF,GADUnC,YAAY7C,GACN,uCAAG,4BAAAS,EAAA,yDAErBkC,EAAS5D,EAAe,KACxB4D,EAAS3D,EAAe,IACxB2D,EAAS7D,EAAU,OACbmG,EAAU,IAAI5H,IAAa,mCACjCsF,EAASlE,EAASwG,IAClBtC,EAASzD,GAAoB,IAC7ByD,EAASxD,EAAe,QACpB3B,EATiB,kCAUXA,EAAOmH,OAAOO,oBAVH,yBAWX1H,EAAOmH,OAAOQ,iBAXH,yBAYX3H,EAAOmH,OAAOS,UAZH,4CAAH,sDAetB,OACI,8BACI,wBAAQP,QAASG,EAAkBF,UAAU,wNAA7C,SACKrH,O,QCqGF4H,EA3HU,WAErB,IAAM1C,EAAWC,cACX0C,EAAezC,YAAYxC,GAC3BrC,EAAgB6E,YAAY1C,GAG5B/C,GAFcyF,YAAYvC,GACZuC,YAAY9C,GAClB8C,YAAYjD,IACpB/B,EAAkBgF,YAAY3C,GAE9BqF,EAAkB,uCAAG,sCAAA9E,EAAA,gEAGY6E,QAHZ,IAGYA,OAHZ,EAGYA,EAAc1E,KAAI,SAAA4E,GACjD,IAAM5D,EAAQ5D,EAAcyH,MAAK,SAAAC,GAAK,OAAIA,EAAMzD,SAAWuD,EAAQG,eACnE,GAAK/D,EAAL,CACA,IAAMgE,EAAmBJ,EAAQF,aAAa1E,KAAI,SAAAiF,GAK9C,OAJ8BC,YAAO,CACjCC,oBAAqBC,YAAQH,EAAIrF,SACjCyF,WAAYC,YAAIL,EAAII,iBAgB5B,OAZA3D,QAAQC,IAAIX,EAAMC,SACMiE,YAAO,CAC3BK,SAAUC,YAAOxE,EAAMD,IACvB0E,cAAeP,YAAO,CAClBQ,WAAYF,YAAOxE,EAAMM,MACzBqE,YAAaC,aAAK,GAClBhG,QAASwF,YAAQpE,EAAMpB,SACvBsB,SAAUoE,YAAItE,EAAME,UACpB2E,OAAQP,YAAI,KACZQ,kBAAmBC,YAAKf,WAM/BN,EA5BkB,wDA6BjBsB,EA7BiB,OA6BUtB,QA7BV,IA6BUA,OA7BV,EA6BUA,EAAc1E,KAAI,SAAA4E,GAC/C,IAAM5D,EAAQ5D,EAAcyH,MAAK,SAAAC,GAAK,OAAIA,EAAMzD,SAAWuD,EAAQG,eACnE,GAAK/D,EAAL,CACA,IAAMgE,EAAmBJ,EAAQF,aAAa1E,KAAI,SAAAiF,GAK9C,MAJ8B,CAC1BE,oBAAsBF,EAAIrF,QAC1ByF,WAAaJ,EAAII,eAgBzB,OAZA3D,QAAQC,IAAIX,EAAMC,SACM,CACpBsE,SAAWvE,EAAMD,GACjB0E,cAAgB,CACZC,WAAa1E,EAAMM,KACnBqE,aAAc,EACd/F,QAAUoB,EAAMpB,QAChBsB,SAAWF,EAAME,SACjB2E,OAAQ,IACRC,kBAAoBd,QAhDT,kBAuDIxI,EAAMI,OAAO6F,GAAGxF,GAvDpB,UAuDbP,EAvDa,OAyDdsJ,EAzDc,0DA2DnBtE,QAAQC,IAAIqE,EAAkB,IACxBC,EAAmBvJ,EAASwJ,QAAQC,gBAAgB,CACtDC,aAAc,CAAC,CACXb,SAAU,IACVM,OAAQ,IACRQ,UAAU,EACVZ,cAAe,CACX7F,QAAS,uCACTsB,SAAU,GACVyE,aAAa,EACbD,WAAY,SAEhBhB,aAAc,CACV,CACIS,oBAAqB,uCACrBE,WAAY,QAIxBiB,aAAc,IAAIC,KAAKA,KAAKC,OAAOC,gBA9EpB,UAgFFR,EAAiBS,KAAK,CACnCC,aAAc,IACdC,SAAU,IACVC,IAAK,MAnFU,eAgFbC,EAhFa,iBAsFQA,EAAGC,aAAa,GAtFxB,eAsFbA,EAtFa,OAuFnBrF,QAAQC,IAAIoF,GAvFO,UAwFQrK,EAASK,UAxFjB,QAwFbA,EAxFa,OAyFnBgF,EAAS1D,EAAWtB,IAzFD,kDA2FnB2E,QAAQC,IAAR,MA3FmB,0DAAH,qDAiGxB,OACI,wBACIsC,QAASU,EACTT,UAAS,UAAKQ,IAA4B,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcsC,QAAS,EAAI,gBAAkB,GAAlE,6NAFb,SAKStC,IAA4B,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcsC,QAAS,EAAxC,cAEWtC,EAAasC,OAFxB,0CC7DDC,EArDA,WAEX,IAAMzJ,EAAcyE,YAAYvC,GAC1BzC,EAAkBgF,YAAY3C,GAC9B9C,EAAQyF,YAAYjD,GAEpBkI,EAAU,uCAAG,oCAAArH,EAAA,sEACQrD,EAAMI,OAAO6F,GAAGxF,GADxB,cACTP,EADS,QAETyK,EAAa,IAAIZ,MACZa,YAAY,EAAG,EAAG,EAAG,GAChC1F,QAAQC,IAAIwF,EAAWE,WACvB3F,QAAQC,IAAIwF,GACM,SACH,MACTG,EAAU,IAAIf,KAAKY,EAAWE,UAAaE,QAAad,cACxDe,EAAmB9K,EAASwJ,QAAQuB,mBAAmBH,GAT9C,UAUEE,EAAiBd,KAAK,CACnCC,aAAc,IACdC,SAAU,IACVC,IAAK,MAbM,eAUTC,EAVS,iBAgBYA,EAAGC,aAAa,GAhB5B,2DAAH,qDAoBhB7D,qBAAU,WACNxB,QAAQC,IAAInE,KACb,CAACA,IACJ,IAAMR,EAAmBiF,YAAY5C,GACrC,OACI,qBAAK6E,UAAS,4BAAuBlH,EAAmB,kBAAoB,cAA9D,gDAAd,SAEQA,EACI,sBAAKkH,UAAU,uCAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACI,yBAAQA,UAAU,YAAYD,QAASiD,EAAvC,UACI,qBAAKhD,UAAU,aAAawD,IAAI,oBAAoBC,IAAI,eACxD,uBAAMzD,UAAU,YAAhB,gBACQ0D,KAAKC,OAAOtB,KAAKuB,MAAMtC,OAAM,OAAChI,QAAD,IAACA,OAAD,EAACA,EAAa8I,eAAiByB,OAAOxB,KAAKC,QAAU,OAD1F,gBAKR,cAAC,EAAD,OAGJ,cAAC,EAAD,O,2BCgBLwB,I,OA1DK,SAAC,GAAoD,IAAlDjH,EAAiD,EAAjDA,GAAIkH,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,iBAA8B,EAEtChG,mBAAS+F,EAAclH,GAAIsE,YAFW,mBAE7D8C,EAF6D,KAEpDC,EAFoD,OAGtClG,mBAAS+F,EAAclH,GAAInB,SAHW,mBAG7DA,EAH6D,KAGpDyI,EAHoD,KAuCpE,OALAnF,qBAAU,WACNkF,EAAWH,EAAclH,GAAIsE,cAC9B,CAAC4C,IAIA,sBAAK/D,UAAU,qGAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,uBACIA,UAAU,qFACV5C,KAAK,OACLgH,YAAY,sBACZC,MAAO3I,EACP4I,SAAU,SAAAC,GAAC,OA1CC,SAACA,GACzBJ,EAAWI,EAAEC,OAAOH,OACpB,IAAMI,EAAuBV,EAAcjI,KAAI,SAAA4I,GAC3C,OAAIA,EAAY7H,KAAOA,EACZ,YAAC,eACD6H,GADP,IAEIhJ,QAAS6I,EAAEC,OAAOH,QAGfK,KAGfV,EAAiBS,GA8BUE,CAAoBJ,QAG3C,sBAAKvE,UAAU,gCAAf,UACI,cAAC,KAAD,CAAQsE,SAAU,SAAAC,GAAC,OAhCH,SAACA,GACzBL,EAAWK,GACX,IAAME,EAAuBV,EAAcjI,KAAI,SAAA4I,GAC3C,OAAIA,EAAY7H,KAAOA,EACZ,YAAC,eACD6H,GADP,IAEIvD,WAAYoD,IAGTG,KAGfV,EAAiBS,GAoBcG,CAAoBL,IAAIF,MAAOJ,EAASjE,UAAU,gBACzE,uBAAMA,UAAU,0EAAhB,kBAAiGiE,EAAjG,gBCkHDY,GApKM,SAAC,GAAuD,IAArD/H,EAAoD,EAApDA,MAAOiH,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,iBAA8B,EAExChG,oBAAkB,GAFsB,mBAEjE8G,EAFiE,KAEvDC,EAFuD,OAGhB/G,wBAAcvF,GAHE,mBAGjEuM,EAHiE,KAG3CC,EAH2C,OAI1CjH,oBAAkB,GAJwB,mBAIjEkH,EAJiE,KAIxDC,EAJwD,KAKlEtH,EAAWC,cACXzE,EAAoB0E,YAAYxC,GAChC6J,EAAWrH,YAAY1C,GACvBtC,EAAkBgF,YAAY3C,GAC9B9C,EAAQyF,YAAYjD,GACpBnC,EAAcoF,YAAY9C,GAE1BoK,EAAeD,EAASzE,MAAK,SAAAhD,GAAE,OAAIA,EAAGR,SAAWL,KA4CjDwI,EAAY,uCAAG,gCAAA3J,EAAA,sEAEb6B,QAAQC,IAAI1E,GACZyE,QAAQC,IAAIuH,GAHC,SAIeA,EAAqBhD,QAAQuD,QAAQ,uCAAwC,KAJ5F,cAIPC,EAJO,gBAUIA,EAAchD,KAAK,CAChCC,aAAc,IACdC,SAAU,IACVC,IAAK,MAbI,cAUPC,EAVO,iBAgBcA,EAAGC,aAAa,GAhB9B,QAgBPA,EAhBO,OAiBbrF,QAAQC,IAAIoF,GACZkC,GAAY,GAlBC,kDAqBbvH,QAAQC,IAAR,MArBa,0DAAH,qDA2ClB,OAlBAuB,qBAAU,WAAM,4CAEZ,WAAgCyG,GAAhC,iBAAA9J,EAAA,sEACuCrD,EAAMI,OAAO6F,GAAGkH,GADvD,cACUT,EADV,OAEIC,EAAwBD,GAF5B,SAG+BA,EAAqBnM,UAHpD,cAGUA,EAHV,gBAIyBA,EAAO,OAAW2F,IAAI7F,GAJ/C,cAKU+M,WAAWlH,IAAIzF,GACjBgM,GAAY,GAEZA,GAAY,GAEhBI,GAAW,GAVf,6CAFY,sBAcZ,GAbAA,GAAW,GAaPE,GAdQ,qCAecM,CAAgB,OAACN,QAAD,IAACA,OAAD,EAACA,EAAc3J,WAE1D,CAAC2J,IAEA,qBAAKrF,UAAU,qBAAf,SAEQkF,EACI,sBAAKlF,UAAU,0DAAf,UACI,qBAAKA,UAAU,qGAAqG4F,KAAK,WAEzH,qBAAK5F,UAAU,qGAAqG4F,KAAK,WAEzH,qBAAK5F,UAAU,qGAAqG4F,KAAK,cAM7H,qBAAK5F,UAAU,mDAAf,SACK8E,EAEG,sBAAK9E,UAAU,8BAAf,UAEQ,yBAAQA,UAAU,iMAAiMD,QA/F3N,WAEpB,GADgBgE,EAAc8B,OAAM,SAAAC,GAAG,MAAoB,KAAhBA,EAAIpK,YAGpB,MADAqI,EAAcgC,QAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,EAAK9E,aAAa,GAC1F,CAEA,IAAM+E,EAA+B,CACjCrF,YAAa/D,EACb6E,QAAoB,OAAZ0D,QAAY,IAAZA,OAAA,EAAAA,EAActI,SAAUsI,EAAatI,QAAU,EACvDyD,aAAcuD,EACdoC,eAAgB,GAGpB,GAAK9M,EAID,GADcA,EAAkB+M,WAAU,SAACC,GAAD,OAAWA,EAAMxF,cAAgB/D,KAC/D,EACRe,EAASnD,EAAqB,GAAD,oBAAKrB,GAAL,CAAwB6M,UAClD,CACH,IAAII,EAAkBjN,EAAkByC,KAAI,SAAAyK,GACxC,OAAIA,EAAO1F,cAAgB/D,EACfoJ,EAEDK,KAGf1I,EAASnD,EAAqB4L,SAblCzI,EAASnD,EAAqB,CAACwL,OAiFP,gCAEI,qBAAKlG,UAAU,eAAewG,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAxG,SACI,sBAAMC,iBAAe,QAAQC,kBAAgB,QAAQC,eAAa,IAAIC,EAAE,kCAMhF,sBAAK/G,UAAU,8BAAf,UACK+D,EAAcjI,KAAI,SAAA4I,GACf,OACI,8BACI,cAAC,GAAD,CAAkC7H,GAAI6H,EAAY7H,GAAIkH,cAAeA,EAAeC,iBAAkBA,GAApFU,EAAY7H,SAK1C,wBAAQmD,UAAU,0KAA0KD,QA5HzM,WACnB,IAAM2E,EAAc,CAChB7H,GAAE,OAAEkH,QAAF,IAAEA,OAAF,EAAEA,EAAejB,OACnBpH,QAAS,GACTyF,WAAYuC,KAAKC,MAAM,KAAOI,EAAcjB,OAAS,KAGrDkE,EAAgB,uBAAOjD,GAAP,CAAsBW,IAE1CV,EAAiBgD,EAAiBlL,KAAI,SAAAgK,GAAG,kCAAUA,GAAV,IAAepK,QAASoK,EAAIpK,QAASyF,WAAYuD,EAAYvD,kBAmHtE,+BACA,8BAMZ,sBAAKnB,UAAU,iEAAf,UACI,mBAAGA,UAAU,UAAb,uGAGA,wBAAQD,QAASuF,EAActF,UAAU,0LAAzC,oCCjGjBiH,GAvDI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAEZ7N,EAAoB0E,YAAYxC,GAChC4L,EAAI,OAAG9N,QAAH,IAAGA,OAAH,EAAGA,EAAmBsH,MAAK,SAAAhD,GAAE,OAAIA,EAAGkD,cAAgBqG,EAAa/J,UACrEhE,EAAgB4E,YAAYzC,GAClC,OACI,qBAAK0E,UAAU,iBAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,sBACIA,UAAS,UAAKkH,EAAa/J,SAAWhE,EAAgB,+KAAiL,4JAD3O,UAGA,sBAAM6G,UAAU,kGAAhB,SACKkH,EAAa9J,OAElB,sBAAM4C,UAAU,iGAAhB,sBAGA,qBAAKA,UAAU,uEAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,6BAA6BwD,IAAK,YAAc0D,EAAa/J,OAAS,OAAQsG,IAAI,UACjG,sBAAKzD,UAAU,kCAAf,UACI,sBAAMA,UAAU,gCAAhB,SAAiDkH,EAAa/J,SAC9D,sBAAM6C,UAAU,iCAAhB,SAAkDkH,EAAazN,aAGvE,qBAAKuG,UAAU,6BAAf,SACI,oBAAIA,UAAU,4CAAd,SAA2DkH,EAAanK,QAAb,SAAwB,GAAMmK,EAAalK,mBAKlH,sBAAKgD,UAAU,yFAAf,UAEQmH,GAAqC,IAA7BA,EAAK3G,aAAasC,OAEtB,qBAAI9C,UAAU,4BAAd,uCAAqEmH,EAAK3G,aAAasC,OAAvF,oBAEA,oBAAI9C,UAAU,4BAAd,mCAGJmH,GAAqC,IAA7BA,EAAK3G,aAAasC,OAEtB,mBAAG9C,UAAU,iBAAb,2BAEA,mBAAGA,UAAU,iBAAb,4CCwBboH,GAtEA,WACX,IAAMvJ,EAAWC,cACX3E,EAAgB4E,YAAYzC,GAC5B+L,EAAoBtJ,YAAY1C,GAChChC,EAAoB0E,YAAYxC,GAJrB,EAKyByC,mBAAwB,IALjD,mBAKV+F,EALU,KAKKC,EALL,OAMShG,mBAAiB,IAN1B,mBAMVlB,EANU,KAMHwK,EANG,KAuBjB,OACI,sBAAKtH,UAAU,iCAAf,UACI,qBAAKA,UAAU,0EAAf,SAEQqH,EAAkBvL,KAAI,SAAAoL,GAClB,OACI,qBAA+BlH,UAAS,gBAAmBD,QAAS,kBArB9D,SAACwH,GAC3B,GAAIzK,IAAUyK,EAGd,GAFAD,EAASC,GACT1J,EAASrD,EAAiB+M,IACtBlO,GAAqBA,EAAkByJ,OAAS,EAAG,CACnD,IAAM0E,EAAanO,EAAkB+M,WAAU,SAACzI,GAAD,OAAQA,EAAGkD,cAAgB0G,KAEtEvD,EADAwD,EAAa,EACI,GAEAnO,EAAkBmO,GAAYhH,mBAGnDwD,EAAiB,IASyEyD,CAAsBP,EAAa/J,SAA7G,SACI,8BACI,cAAC,GAAD,CAAY+J,aAAcA,OAFxBA,EAAa/J,aASvC,qBAAK6C,UAAU,iCAAf,SACK7G,EACG,qBAAK6G,UAAU,gHAAf,SACI,mBAAGA,UAAU,6CAAb,SACI,qBAAKA,UAAU,SAAf,SACI,cAAC,GAAD,CAAclD,MAAOA,EAAyBiH,cAAeA,EAAeC,iBAAkBA,UAO1G,qBAAKhE,UAAU,gHAAf,SACI,qBAAKA,UAAU,6CAAf,SACI,qBAAKA,UAAU,SAAf,SACI,uBAAOA,UAAU,OAAjB,SACI,qBAAKA,UAAU,+BAAf,SAEI,mBAAGA,UAAU,sCAAb,sDC1D3B0H,GAAO,WAEhB,OACI,qBAAK1H,UAAU,uBAAf,SACI,cAAC,GAAD,OCIG2H,OATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,GAAD,QCKSC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCFRQ,GAAcC,aAAgB,CAChCzN,MAAO0N,IAEEC,GAAQC,YAAe,CAChCC,QAASL,KCJbM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACA,cAAC,GAAD,QAGFM,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.c11524c9.chunk.js","sourcesContent":["import type { TezosToolkit, WalletOperation } from \"@taquito/taquito\";\nimport type { BeaconWallet } from \"@taquito/beacon-wallet\";\n\nexport type TezosAccountAddress = `tz${\"1\" | \"2\" | \"3\"}${string}`;\nexport type TezosContractAddress = `KT1${string}`;\n\nexport enum AvailableToken {\n  KUSD = \"kUSD\",\n  HDAO = \"hDAO\",\n  PLENTY = \"PLENTY\",\n  xPLENTY = \"xPLENTY\",\n  WXTZ = \"wXTZ\",\n  STKR = \"STKR\",\n  TZBTC = \"tzBTC\",\n  USDTZ = \"USDtz\",\n  ETHTZ = \"ETHtz\",\n  CRUNCH = \"CRUNCH\",\n  WRAP = \"WRAP\",\n  wAAVE = \"wAAVE\",\n  wBUSD = \"wBUSD\",\n  wCEL = \"wCEL\",\n  wCOMP = \"wCOMP\",\n  wCRO = \"wCRO\",\n  WDAI = \"wDAI\",\n  wFTT = \"wFTT\",\n  wHT = \"wHT\",\n  wHUSD = \"wHUSD\",\n  wLEO = \"wLEO\",\n  wLINK = \"wLINK\",\n  wMATIC = \"wMATIC\",\n  wMKR = \"wMKR\",\n  wOKB = \"wOKB\",\n  wPAX = \"wPAX\",\n  wSUSHI = \"wSUSHI\",\n  wUNI = \"wUNI\",\n  wUSDC = \"wUSDC\",\n  wUSDT = \"wUSDT\",\n  WWBTC = \"wWBTC\",\n  wWETH = \"wWETH\",\n  CRDAO = \"crDAO\",\n  FLAME = \"FLAME\",\n  KALAM = \"KALAM\",\n  PAUL = \"PAUL\",\n  SMAK = \"SMAK\",\n  GOT = \"GOT\",\n  HERA = \"HERA\",\n  KDAO = \"kDAO\",\n  QUIPU = \"QUIPU\",\n  uUSD = \"uUSD\",\n  YOU = \"YOU\",\n  Ctez = \"Ctez\",\n  MAG = \"MAG\",\n  PXL = \"PXL\",\n  pxlDAO = \"pxlDAO\",\n  fDAO = \"fDAO\",\n  BTCtz = \"BTCtz\",\n  IDZ = \"IDZ\",\n  GIF = \"GIF\",\n  TezDAO = \"TezDAO\",\n  uBTC = \"uBTC\",\n  XTZ = \"XTZ\",\n  OTHER = \"OTHER\"\n}\nexport interface TokenContract {\n  address: TezosContractAddress;\n  dexContractAddress: TezosContractAddress;\n  decimals: number;\n  ledgerPath: string;\n  ledgerKey: \"address\" | [\"address\", number] | [string, \"address\"];\n  type: \"fa1.2\" | \"fa2\";\n  color: string;\n  exchangeRate: null | number; // token to XTZ\n  tokenId?: number; // only for fa2 contracts;\n  thumbnail?: string;\n  websiteLink?: string;\n}\n\nexport type IconValue = AvailableToken | \"XTZ\" | \"QUIPUSWAP\" | \"crDAO\" | \"user\";\nexport type IconSet = IconValue[];\n\nexport interface Operation {\n  entryId: number;\n  id: string;\n  hash: string;\n  level: number;\n  timestamp: string;\n  entrypoint: string;\n  sender: { address: string; alias: string };\n  target: { address: string; alias: string };\n  amount: number;\n  value: number;\n  icons: IconSet;\n  raw: any;\n  tokenIds: number[] | null;\n  status: \"applied\" | \"failed\" | \"backtracked\" | \"skipped\";\n}\n\nexport interface State {\n  network: \"testnet\" | \"mainnet\";\n  currentLevel: number;\n  Tezos: TezosToolkit;\n  wallet: BeaconWallet;\n  userAddress: TezosAccountAddress;\n  settings: {\n    testnet: {\n      rpcUrl: string;\n      validRpcUrls: { name: string; url: string }[];\n    };\n    mainnet: {\n      rpcUrl: string;\n      validRpcUrls: { name: string; url: string }[];\n    };\n  };\n  tokens: { [p in AvailableToken]: TokenContract } | undefined;\n  tokensBalances: TokenBalanceInfo[];\n  lastOperations: Operation[];\n  xtzData: {\n    exchangeRate: undefined;\n    balance: number;\n    historic: [];\n  };\n  serviceFee: number;\n  admin: TezosAccountAddress;\n  defiData: string;\n  blurryBalances: boolean;\n}\n\nexport interface TokenBalanceInfo {\n  id: string;\n  address: TezosContractAddress,\n  balance: number;\n  decimals: number;\n  icon: string;\n  name: string;\n  symbol: AvailableToken;\n  type: string;\n  isApproved: boolean;\n}\n\nexport interface TokenDistribution {\n  tokenSymbol: AvailableToken;\n  amount: number;\n  approvedAmount?: number;\n  distribution: Beneficiary[],\n}\nexport interface Beneficiary {\n  id?: number,\n  address: string,\n  percentage: number;\n}\n\nexport interface UserProfile {\n  token_assets: any;\n  trigger_time: any;\n}\n\n//export interface TokenDistribution {\n//  beneficiaryAddress: TezosAccountAddress | TezosContractAddress;\n//  percentage: number;\n//}\n\n// smart contract storage\n\ninterface User {\n  address: TezosAccountAddress;\n  tokenAssets: UserTokenAsset;\n  triggerSwitchAt: number;\n}\n\ninterface UserTokenAsset {\n  assetId: string;\n  tokenDetails: TokenDetails;\n  uncapped: boolean\n}\n\ninterface TokenDetails {\n  type?: \"fa1.2\" | \"fa2\";\n  address: TezosContractAddress;\n  decimals: number;\n  distribution: [AssetDistribution];\n}\ninterface AssetDistribution {\n  beneficiary: TezosAccountAddress,\n  percentage: number;\n}\n\n// entrypoints \n// update tokenDetails \n// update trigger time at \n// read storage\n// transfer\n\n","import { createSlice } from '@reduxjs/toolkit'\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito'\nimport { AvailableToken, TezosAccountAddress, TezosContractAddress, TokenContract, TokenBalanceInfo, TokenDistribution, UserProfile } from '../../types';\n\n\nexport type TezosState = {\n    Tezos: TezosToolkit,\n    contract: any,\n    wallet: BeaconWallet | null,\n    userAddress: TezosAccountAddress | undefined,\n    userBalance: number,\n    storage: any,\n    beaconConnection: boolean,\n    contractAddress: TezosContractAddress,\n    publicToken: string,\n    tokens: { [p in AvailableToken]: TokenContract } | undefined;\n    tokenBalances: TokenBalanceInfo[],\n    selectedToken: AvailableToken | null,\n    selectedTokenDistribution: TokenDistribution | null,\n    tokenDistribution: TokenDistribution[] | undefined;\n    userProfile: UserProfile | null;\n}\nexport const initialState: TezosState = {\n    Tezos: new TezosToolkit(\"https://ithacanet.ecadinfra.com\"),\n    contract: undefined,\n    wallet: null,\n    userAddress: undefined,\n    userBalance: 0,\n    storage: null,\n    beaconConnection: false,\n    contractAddress: \"KT19xorVBYtEy5sofm6HTJsP219MtzpybEtu\",\n    publicToken: \"\",\n    tokens: undefined,\n    tokenBalances: [],\n    selectedToken: null,\n    selectedTokenDistribution: null,\n    tokenDistribution: undefined,\n    userProfile: null,\n}\n\nconst tezosSlice = createSlice({\n    name: 'tezos',\n    initialState: initialState,\n    reducers: {\n        setTezos: (state, action) => {\n            state.Tezos = action.payload;\n        },\n        setContract: (state, action) => {\n            state.contract = action.payload\n        },\n        setWallet: (state, action) => {\n            state.wallet = action.payload\n        },\n        setUserAddress: (state, action) => {\n            state.userAddress = action.payload\n        },\n        setUserBalance: (state, action) => {\n            state.userBalance = action.payload\n        },\n        setStorage: (state, action) => {\n            state.storage = action.payload\n        },\n        setBeaconConnection: (state, action) => {\n            state.beaconConnection = action.payload\n        },\n        setPublicToken: (state, action) => {\n            state.publicToken = action.payload\n        },\n        setTokens: (state, action) => {\n            state.tokens = action.payload\n        },\n        setTokenBalances: (state, action) => {\n            state.tokenBalances = action.payload\n        },\n        setSelectedToken: (state, action) => {\n            state.selectedToken = action.payload\n        },\n        setSelectedTokenDistribution: (state, action) => {\n            state.selectedTokenDistribution = action.payload\n        },\n        setTokenDistribution: (state, action) => {\n            state.tokenDistribution = action.payload;\n        },\n        setUserProfile: (state, action) => {\n            state.userProfile = action.payload;\n        }\n    }\n});\nexport const {\n    setTezos,\n    setContract,\n    setWallet,\n    setUserAddress,\n    setUserBalance,\n    setStorage,\n    setBeaconConnection,\n    setPublicToken,\n    setTokens,\n    setTokenBalances,\n    setSelectedToken,\n    setSelectedTokenDistribution,\n    setTokenDistribution,\n    setUserProfile\n} = tezosSlice.actions;\n\nexport default tezosSlice.reducer;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport { initialState } from \"./slice\";\n\nconst tezosSlice = (state: RootState) => state.tezos || initialState;\n\nexport const selectTezos = createSelector([tezosSlice], state => state.Tezos);\n\nexport const selectContract = createSelector([tezosSlice], state => state.contract);\n\nexport const selectWallet = createSelector([tezosSlice], state => state.wallet);\n\nexport const selectUserAddress = createSelector([tezosSlice], state => state.userAddress);\n\nexport const selectUserBalance = createSelector([tezosSlice], state => state.userBalance);\n\nexport const selectStorage = createSelector([tezosSlice], state => state.storage);\n\nexport const selectBeaconConnection = createSelector([tezosSlice], state => state.beaconConnection);\n\nexport const selectContractAddress = createSelector([tezosSlice], state => state.contractAddress);\n\nexport const selectPublicToken = createSelector([tezosSlice], state => state.publicToken);\n\nexport const selectTokens = createSelector([tezosSlice], state => state.tokens);\n\nexport const selectTokenBalances = createSelector([tezosSlice], state => state.tokenBalances);\n\nexport const selectSelectedToken = createSelector([tezosSlice], state => state.selectedToken);\n\nexport const selectSelectedTokenDistribution = createSelector([tezosSlice], state => state.selectedTokenDistribution);\n\nexport const selectTokenDistribution = createSelector([tezosSlice], state => state.tokenDistribution);\n\nexport const selectUserProfile = createSelector([tezosSlice], state => state.userProfile);\n","import TokenAsset from \"../components/TokenAsset\";\nimport { AvailableToken, TezosAccountAddress, TokenBalanceInfo } from \"../types\";\n\nexport const fetchUserBalances = async (address: TezosAccountAddress): Promise<TokenBalanceInfo[] | null> => {\n    try {\n        const tokensWithBalanceReq = await fetch(\n            `https://api.ithacanet.tzkt.io/v1/tokens/balances?account=${address}&balance.gt=1`\n        );\n        let map : any = {\n            3754 : AvailableToken.BTCtz,\n            3755 : AvailableToken.FLAME,\n            3764 : AvailableToken.GIF,\n            3759 : AvailableToken.wWETH,\n            3760 : AvailableToken.GOT\n        } ;\n        if (tokensWithBalanceReq) {\n            const tokensWithBalance = await tokensWithBalanceReq.json();\n            const allTokens = tokensWithBalance.map((tokenData: any) => ({\n                id: tokenData.id,\n                address: tokenData.token.contract.address,\n                balance: tokenData.balance,\n                decimals: tokenData.token.metadata?.decimals ? tokenData.token.metadata?.decimals : 0,\n                icon: tokenData.token.metadata?.icon ? tokenData.token.metadata?.icon : '',\n                name: tokenData.token.metadata?.name ? tokenData.token.metadata?.name : map[tokenData.id],\n                symbol: map[tokenData.id],\n                type: tokenData.token.standard.toUpperCase(),\n                isApproved: false\n            }));\n            console.log(allTokens.filter((tk: any) => tk.type === 'FA1.2'))\n            return allTokens.filter((tk: any) => tk.type === 'FA1.2')\n        } else {\n            return null;\n        }\n\n    } catch(err) {\n        console.log(err);\n        return null;\n    }\n};","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectTezos,\n  selectWallet,\n  selectContractAddress,\n} from \"../../features/tezos/selectors\";\nimport {\n  setUserAddress,\n  setUserBalance,\n  setBeaconConnection,\n  setTokenBalances,\n  setStorage,\n  setPublicToken,\n  setWallet,\n  setUserProfile,\n  setContract,\n} from \"../../features/tezos/slice\";\nimport {\n  BeaconEvent,\n  defaultEventCallbacks,\n  NetworkType,\n} from \"@airgap/beacon-sdk\";\n\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { fetchUserBalances } from \"../../libs/utils\";\nimport { AvailableToken, TezosAccountAddress, TokenBalanceInfo, UserProfile } from \"../../types\";\n\nconst ConnectButton = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const Tezos = useSelector(selectTezos);\n  const wallet = useSelector(selectWallet);\n\n  const [publicTkn, setPublicTkn] = useState<string | null>(\"\");\n\n  const setup = async (userAddress: TezosAccountAddress): Promise<void> => {\n    dispatch(setUserAddress(userAddress));\n\n    const balance = await Tezos.tz.getBalance(userAddress);\n\n    dispatch(setUserBalance(balance.toNumber()));\n\n    const tokenBalances = await fetchUserBalances(userAddress)\n    console.log(tokenBalances);\n    //const xtzBalance: TokenBalanceInfo = {\n    //  address: \"KT1\",\n    //  balance: balance.toNumber(),\n    //  decimals: 6,\n    //  icon: \"\",\n    //  name: \"Tezos\",\n    //  symbol: AvailableToken.XTZ,\n    //  type: \"FA1.2\",\n    //  isApproved: false\n    //}\n    //tokenBalances?.push(xtzBalance);\n    dispatch(setTokenBalances(tokenBalances));\n    const contract = await Tezos.wallet.at('KT19xorVBYtEy5sofm6HTJsP219MtzpybEtu');\n    dispatch(setContract(contract));\n\n    const storage: any = await contract.storage();\n    dispatch(setStorage(storage));\n    \n    const userProfile = await storage['users'].get(userAddress) as UserProfile;\n    console.log('userP', userProfile)\n    dispatch(setUserProfile(userProfile))\n  };\n\n  const connectWallet = async () => {\n    try {\n      await wallet?.requestPermissions({\n        network: {\n          type: NetworkType.CUSTOM,\n          rpcUrl: \"https://ithacanet.ecadinfra.com\",\n        },\n      });\n      const userAddress = await wallet?.getPKH() as TezosAccountAddress;\n      if (userAddress) {\n        await setup(userAddress);\n      }\n\n      dispatch(setBeaconConnection(true));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const wallet = new BeaconWallet({\n        name: \"x_x\",\n        preferredNetwork: NetworkType.CUSTOM,\n        disableDefaultEvents: true,\n        eventHandlers: {\n          [BeaconEvent.PAIR_INIT]: {\n            handler: defaultEventCallbacks.PAIR_INIT,\n          },\n          [BeaconEvent.PAIR_SUCCESS]: {\n            handler: (data) => setPublicTkn(data.publicKey),\n          },\n        },\n      });\n      console.log(wallet);\n      Tezos.setWalletProvider(wallet);\n      dispatch(setWallet(wallet));\n\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        const userAddress = await wallet.getPKH() as TezosAccountAddress;\n        await setup(userAddress);\n        dispatch(setBeaconConnection(true));\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    dispatch(setPublicToken(publicTkn));\n  }, [setPublicTkn]);\n\n  return (\n    <button\n      onClick={connectWallet}\n      className=\"px-4 py-1 text-md text-blue-600 font-semibold rounded-full border border-blue-400 hover:text-white hover:bg-blue-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-blue focus:ring-offset-2\"\n    >\n      Connect Wallet\n    </button>\n  );\n};\n\nexport default ConnectButton;\nfunction setContractAddress(arg0: string): any {\n  throw new Error(\"Function not implemented.\");\n}\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserAddress, selectWallet, selectUserBalance } from \"../../features/tezos/selectors\";\nimport { setUserAddress, setUserBalance, setPublicToken, setWallet, setBeaconConnection, setTezos} from \"../../features/tezos/slice\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nconst DisconnectButton = () => {\n\n    const dispatch = useDispatch();\n    const wallet = useSelector(selectWallet);\n    const userAddress = useSelector(selectUserAddress);\n    const balance = useSelector(selectUserBalance);\n    const disconnectWallet = async () => {\n\n        dispatch(setUserAddress(\"\"));\n        dispatch(setUserBalance(0));\n        dispatch(setWallet(null));\n        const tezosTK = new TezosToolkit(\"https://ithacanet.ecadinfra.com\");\n        dispatch(setTezos(tezosTK));\n        dispatch(setBeaconConnection(false));\n        dispatch(setPublicToken(null));\n        if (wallet) {\n            await wallet.client.removeAllAccounts();\n            await wallet.client.removeAllPeers();\n            await wallet.client.destroy();\n        }\n    }\n    return (\n        <div>\n            <button onClick={disconnectWallet} className=\"px-4 py-1 text-md text-blue-600 font-semibold rounded-full border border-blue-400 hover:text-white hover:bg-blue-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-offset-2\">\n                {userAddress}\n            </button>\n        </div>\n    )\n}\n\nexport default DisconnectButton;","import { selectContractAddress, selectTezos, selectTokenBalances, selectTokenDistribution, selectUserAddress, selectUserProfile } from \"../../features/tezos/selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MichelsonMap } from \"@taquito/taquito\";\nimport { Record, Address, List, Nat, Timestamp, String, Bool } from '@tezwell/michelson-sdk/literal';\nimport { IValue } from \"@tezwell/michelson-sdk/typings\";\nimport { setStorage } from \"../../features/tezos/slice\";\n\nconst CreateWillButton = () => {\n\n    const dispatch = useDispatch();\n    const distribution = useSelector(selectTokenDistribution);\n    const tokenBalances = useSelector(selectTokenBalances);\n    const userProfile = useSelector(selectUserProfile)\n    const userAddress = useSelector(selectUserAddress);\n    const Tezos = useSelector(selectTezos);\n    const contractAddress = useSelector(selectContractAddress);\n\n    const createOrUpdateWill = async () => {\n\n\n        const token_asset_list: IValue[] = distribution?.map(distrib => {\n            const token = tokenBalances.find(tkBal => tkBal.symbol === distrib.tokenSymbol);\n            if (!token) return;\n            const distributionList = distrib.distribution.map(dis => {\n                const michelsonDistribution = Record({\n                    beneficiary_address: Address(dis.address),\n                    percentage: Nat(dis.percentage)\n                })\n                return michelsonDistribution;\n            });\n            console.log(token.balance)\n            const michelson_token = Record({\n                asset_id: String(token.id), // change to id,\n                token_details: Record({\n                    token_type: String(token.type),\n                    is_fungible: Bool(false),\n                    address: Address(token.address),\n                    decimals: Nat(token.decimals), // remove this \n                    amount: Nat(100),\n                    distribution_list: List(distributionList)\n                })\n            });\n            return michelson_token;\n        }) as IValue[]\n\n        if (!distribution) return;\n        const token_asset_list2: any[] = distribution?.map(distrib => {\n            const token = tokenBalances.find(tkBal => tkBal.symbol === distrib.tokenSymbol);\n            if (!token) return;\n            const distributionList = distrib.distribution.map(dis => {\n                const michelsonDistribution = {\n                    beneficiary_address: (dis.address),\n                    percentage: (dis.percentage)\n                }\n                return michelsonDistribution;\n            });\n            console.log(token.balance)\n            const michelson_token = {\n                asset_id: (token.id), // change to id,\n                token_details: ({\n                    token_type: (token.type),\n                    is_fungible: (false),\n                    address: (token.address),\n                    decimals: (token.decimals), // remove this \n                    amount: 100,\n                    distribution_list: (distributionList)\n                })\n            }\n            return michelson_token;\n        })\n\n        try {\n            const contract = await Tezos.wallet.at(contractAddress);\n\n            if (!token_asset_list2) return\n\n            console.log(token_asset_list2[0])\n            const createUserMethod = contract.methods.createUserParam({\n                token_assets: [{\n                    asset_id: \"1\",\n                    amount: 100,\n                    uncapped: false,\n                    token_details: {\n                        address: \"KT1KuoFrHs4bxRbLRm79qGs69xP93hKVnsD9\",\n                        decimals: 10,\n                        is_fungible: true,\n                        token_type: \"FA1.2\"\n                    },\n                    distribution: [\n                        {\n                            beneficiary_address: \"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb\",\n                            percentage: 100\n                        }\n                    ]\n                }],\n                trigger_time: new Date(Date.now()).toISOString()\n            })\n            const op = await createUserMethod.send({\n                storageLimit: 2000,\n                gasLimit: 500000,\n                fee: 200000\n            });\n\n            const confirmation = await op.confirmation(3);\n            console.log(confirmation);\n            const storage: any = await contract.storage();\n            dispatch(setStorage(storage));\n        } catch (err) {\n            console.log(err)\n        }\n        // tokenAsset = asset_id , token_details , amount , distribution list , uncapped\n        // tokenDetails = token_type , is_fungible, address, decimals\n\n    }\n    return (\n        <button\n            onClick={createOrUpdateWill}\n            className={`${distribution && distribution?.length > 0 ? \"animate-pulse\" : \"\"} px-4 py-1 text-md text-blue-600 font-semibold rounded-full border border-blue-400 hover:text-white hover:bg-blue-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-blue focus:ring-offset-2`}\n        >\n            {\n                (distribution && distribution?.length > 0)\n                    ?\n                    `Add ${distribution.length} assets to Will`\n                    :\n                    `Create Empty User`\n            }\n        </button>\n    )\n}\n\nexport default CreateWillButton;","import ConnectButton from './ConnectButton';\nimport DisconnectButton from './DisconnectButton';\nimport { useSelector } from 'react-redux';\nimport { selectBeaconConnection, selectContractAddress, selectTezos, selectUserProfile } from '../features/tezos/selectors';\nimport CreateWillButton from './CreateWillButton/CreateWillButton';\nimport { useEffect } from 'react';\nconst Navbar = () => {\n\n    const userProfile = useSelector(selectUserProfile)\n    const contractAddress = useSelector(selectContractAddress);\n    const Tezos = useSelector(selectTezos);\n\n    const extendTime = async () => {\n        const contract = await Tezos.wallet.at(contractAddress);\n        const startOfDay = new Date();\n        startOfDay.setUTCHours(0, 0, 0, 0);\n        console.log(startOfDay.getTime())\n        console.log(startOfDay)\n        const sixMonths = 15778800000;\n        const oneDay = 86400000;\n        const newTime = new Date(startOfDay.getTime() + (oneDay * 2)).toISOString();\n        const updateUserMethod = contract.methods.updateTriggerParam(newTime);\n        const op = await updateUserMethod.send({\n            storageLimit: 2000,\n            gasLimit: 500000,\n            fee: 200000\n        });\n\n        const confirmation = await op.confirmation(3);\n\n    }\n\n    useEffect(() => {\n        console.log(userProfile)\n    }, [userProfile]);\n    const beaconConnection = useSelector(selectBeaconConnection);\n    return (\n        <nav className={`flex items-center ${beaconConnection ? \"justify-between\" : \"justify-end\"} flex-wrap bg-yellow-100 p-6 border-gray-200`}>\n            {\n                beaconConnection ?\n                    <div className='w-full flex flex-row justify-between'>\n                        <DisconnectButton />\n                        <div className='flex flex-row'>\n                            <button className='flex w-48' onClick={extendTime}>\n                                <img className='h-8 w-auto' src=\"./images/dead.png\" alt=\"dead emoji\" />\n                                <span className='mt-1 ml-1'>\n                                    in {Math.floor((Date.parse(String(userProfile?.trigger_time)) - Number(Date.now())) / 86400000)} days\n                                </span>\n                            </button>\n                        </div>\n                        <CreateWillButton />\n                    </div>\n                    :\n                    <ConnectButton />\n            }\n        </nav>\n    )\n}\n\nexport default Navbar;","import Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { useState, useEffect } from 'react';\nimport { Beneficiary as BeneficiaryType } from '../../types';\n\ntype Props = {\n    id: any,\n    beneficiaries: BeneficiaryType[],\n    setBeneficiaries: any\n}\n\nconst Beneficiary = ({ id, beneficiaries, setBeneficiaries }: Props) => {\n\n    const [percent, setPercent] = useState(beneficiaries[id].percentage)\n    const [address, setAddress] = useState(beneficiaries[id].address);\n\n    const handleAddressChange = (e: any) => {\n        setAddress(e.target.value);\n        const updatedBeneficiaries = beneficiaries.map(beneficiary => {\n            if (beneficiary.id === id) {\n                return ({\n                    ...beneficiary,\n                    address: e.target.value\n                })\n            } else {\n                return beneficiary\n            }\n        })\n        setBeneficiaries(updatedBeneficiaries);\n    }\n    const handlePercentChange = (e: any) => {\n        setPercent(e)\n        const updatedBeneficiaries = beneficiaries.map(beneficiary => {\n            if (beneficiary.id === id) {\n                return ({\n                    ...beneficiary,\n                    percentage: e\n                })\n            } else {\n                return beneficiary\n            }\n        })\n        setBeneficiaries(updatedBeneficiaries);\n    }\n\n    useEffect(() => {\n        setPercent(beneficiaries[id].percentage)\n    }, [beneficiaries])\n\n\n    return (\n        <div className='flex flex-col ml-8 p-8 justify-items-center border-blue-400 bg-yellow-100 border-0  m-1 border-l-2'>\n            <div className='flex justify-between '>\n                <input\n                    className=\"w-full py-4 pl-3 pr-16 text-sm border-2 border-gray-200 bg-yellow-100 rounded-full\"\n                    type=\"text\"\n                    placeholder=\"Beneficiary Address\"\n                    value={address}\n                    onChange={e => handleAddressChange(e)}\n                />\n            </div>\n            <div className='flex color align-center mt-2 '>\n                <Slider onChange={e => handlePercentChange(e)} value={percent} className=\"self-center\" />\n                <span className='w-1/4 ml-4 pl-2 pt-2 pb-2 text-sm border-2 border-gray-200 rounded-full' >gets {percent}% </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Beneficiary;","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContractAddress, selectTezos, selectTokenBalances, selectTokenDistribution, selectUserAddress } from '../../features/tezos/selectors';\nimport { setTokenDistribution } from '../../features/tezos/slice';\nimport { AvailableToken, Beneficiary as BeneficiaryType, TokenDistribution } from '../../types';\nimport Beneficiary from '../Beneficiary/Beneficiary';\n\ntype Props = {\n    token: AvailableToken,\n    beneficiaries: BeneficiaryType[],\n    setBeneficiaries: any\n}\n\nconst Distribution = ({ token, beneficiaries, setBeneficiaries }: Props) => {\n\n    const [approved, setApproved] = useState<boolean>(false)\n    const [currentTokenContract, setCurrentTokenContract] = useState<any>(undefined)\n    const [loading, setLoading] = useState<boolean>(true);\n    const dispatch = useDispatch();\n    const tokenDistribution = useSelector(selectTokenDistribution);\n    const balances = useSelector(selectTokenBalances);\n    const contractAddress = useSelector(selectContractAddress);\n    const Tezos = useSelector(selectTezos);\n    const userAddress = useSelector(selectUserAddress);\n\n    const currentToken = balances.find(tk => tk.symbol === token);\n    const addBeneficiary = () => {\n        const beneficiary = {\n            id: beneficiaries?.length,\n            address: \"\",\n            percentage: Math.floor(100 / (beneficiaries.length + 1)),\n        }\n\n        let newBeneficiaries = [...beneficiaries, beneficiary];\n\n        setBeneficiaries(newBeneficiaries.map(ben => ({ ...ben, address: ben.address, percentage: beneficiary.percentage })));\n    }\n    const addDistribution = () => {\n        const isValid = beneficiaries.every(ben => ben.address !== \"\");\n        if (!isValid) return // error\n        const sumOfBeneficiaries = beneficiaries.reduce((prev, curr) => (prev + curr.percentage), 0)\n        if (sumOfBeneficiaries !== 100) return\n\n        const tkDistrib: TokenDistribution = {\n            tokenSymbol: token as AvailableToken,\n            amount: currentToken?.balance ? currentToken.balance : 0,\n            distribution: beneficiaries,\n            approvedAmount: 0,\n        }\n\n        if (!tokenDistribution) {\n            dispatch(setTokenDistribution([tkDistrib]));\n        } else {\n            const index = tokenDistribution.findIndex((tkDis) => tkDis.tokenSymbol === token);\n            if (index < 0) {\n                dispatch(setTokenDistribution([...tokenDistribution, tkDistrib]))\n            } else {\n                let newTokenDistrib = tokenDistribution.map(tkDist => {\n                    if (tkDist.tokenSymbol === token) {\n                        return (tkDistrib)\n                    } else {\n                        return tkDist;\n                    }\n                });\n                dispatch(setTokenDistribution(newTokenDistrib));\n            }\n        }\n    }\n\n    const approveToken = async () => {\n        try {\n            console.log(contractAddress);\n            console.log(currentTokenContract);\n            const approveMethod = await currentTokenContract.methods.approve(\"KT19xorVBYtEy5sofm6HTJsP219MtzpybEtu\", 100);\n            //console.log(approveMethodEstimate);\n            //const { gasLimit,\n            //    storageLimit,\n            //    suggestedFeeMutez } = await Tezos.estimate.transfer(approveMethodEstimate);\n            //    console.log(gasLimit, storageLimit, suggestedFeeMutez);\n            const op = await approveMethod.send({\n                storageLimit: 2000,\n                gasLimit: 500000,\n                fee: 200000\n            });\n\n            const confirmation = await op.confirmation(3);\n            console.log(confirmation);\n            setApproved(true);\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        async function getTokenContract(tokenContract: string) {\n            const currentTokenContract = await Tezos.wallet.at(tokenContract);\n            setCurrentTokenContract(currentTokenContract);\n            const storage: any = await currentTokenContract.storage()\n            const x: any = await storage['ledger'].get(userAddress);\n            if (x.allowances.get(contractAddress)) {\n                setApproved(true);\n            } else {\n                setApproved(false);\n            }\n            setLoading(false);\n        };\n        if (currentToken) {\n            const tokenContract = getTokenContract(currentToken?.address);\n        }\n    }, [currentToken]);\n    return (\n        <div className='flex h-full -mt-20'>\n            {\n                loading ?\n                    <div className=\"flex justify-center items-center space-x-2 mt-60 ml-80 \">\n                        <div className=\"spinner-grow inline-block w-12 h-12 bg-current rounded-full opacity-50 animate-ping  text-blue-600\" role=\"status\">\n                        </div>\n                        <div className=\"spinner-grow inline-block w-12 h-12 bg-current rounded-full opacity-50 animate-ping  text-blue-700\" role=\"status\">\n                        </div>\n                        <div className=\"spinner-grow inline-block w-12 h-12 bg-current rounded-full opacity-50 animate-ping  text-blue-800\" role=\"status\">\n                        </div>\n                    </div>\n\n                    :\n\n                    <div className='flex flex-col w-full justify-items-center h-full'>\n                        {approved\n                            ?\n                            <div className='flex flex-col w-full h-full'>\n                                {  \n                                    <button className=\" flex justify-self-center self-end m-8 items-center px-8 p-2  text-blue-600 border border-blue-400 rounded hover:bg-blue-400 hover:text-white active:bg-blue-500 focus:outline-none focus:ring\" onClick={addDistribution}>\n                                        Add To Distribution\n                                        <svg className=\"w-5 h-5 ml-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n                                        </svg>\n                                    </button>\n\n                                }\n                                {\n                                    <div className=\"flex ml-28  flex-col w-3/4 \">\n                                        {beneficiaries.map(beneficiary => {\n                                            return (\n                                                <div>\n                                                    <Beneficiary key={beneficiary.id} id={beneficiary.id} beneficiaries={beneficiaries} setBeneficiaries={setBeneficiaries} />\n                                                </div>\n                                            )\n                                        })\n                                        }\n                                        <button className='border-1 rounded-full w-40 m-2 p-2 self-center text-blue-600 border border-blue-400 hover:bg-blue-400 hover:text-white active:bg-blue-500 focus:outline-none focus:ring' onClick={addBeneficiary}> Add Beneficiary </button>\n                                        <div>\n                                        </div>\n                                    </div>\n                                }\n                            </div>\n                            :\n                            <div className='flex flex-col justify-center align-middle justify-items-center'>\n                                <p className='p-4 m-4'>\n                                    To be able to pass on this asset to your beneficiaries, you must allow us to transfer it.\n                                </p>\n                                <button onClick={approveToken} className=\"ml-20 w-1/4 inline-block px-8 py-3 text-sm font-medium text-white transition bg-blue-600 rounded-full hover:scale-110 hover:rotate-2 active:bg-indigo-500 focus:outline-none focus:ring\">\n                                    Click to Allow\n                                </button>\n                            </div>\n\n                        }\n                    </div>\n\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default Distribution;","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSelectedToken, selectTokenDistribution } from '../../features/tezos/selectors';\nimport { setSelectedToken, setSelectedTokenDistribution } from '../../features/tezos/slice';\nimport { AvailableToken, TokenBalanceInfo } from '../../types';\ntype Props = {\n    tokenBalance: TokenBalanceInfo;\n};\n\nconst TokenAsset = ({ tokenBalance }: Props) => {\n\n    const tokenDistribution = useSelector(selectTokenDistribution);\n    const dist = tokenDistribution?.find(tk => tk.tokenSymbol === tokenBalance.symbol);\n    const selectedToken = useSelector(selectSelectedToken);\n    return (\n        <div className=\"flex p-3 ml-12\" >\n            <div className=\"flex group h-48 w-1/4\">\n                <div\n                    className={`${tokenBalance.symbol === selectedToken ? \"animate-pulse shadow-lg  ml-4 flex items-end h-full transition-transform transform border-4 border-pink-500 group-hover:-translate-x-2 group-hover:-translate-y-2 rounded-lg\" : \"flex items-end h-full transition-transform transform border-2 border-pink-500 shadow-md group-hover:-translate-x-2 group-hover:-translate-y-2 rounded-lg\"}`}\n                >\n                <span className=\"absolute right-4 top-4 rounded-full px-3 py-1.5 bg-green-100 text-green-600 font-medium text-xs\">\n                    {tokenBalance.type}\n                </span>\n                <span className=\"absolute left-4 top-4 rounded-full px-3 py-1.5 bg-green-100 text-green-600 font-medium text-xs\">\n                    Fungible\n                </span>\n                <div className=\" transition-opacity group-hover:opacity-0 group-hover:absolute  mb-8\">\n                    <div className=\"flex justify-around w-80\">\n                        <div className='flex justify-center '>\n                            <img className=\"flex self-center w-12 h-12\" src={\"./images/\" + tokenBalance.symbol + \".png\"} alt=\"token\" />\n                            <div className=\"flex flex-col align-center ml-8\">\n                                <span className=\"flex mt-0 text-xl font-medium\">{tokenBalance.symbol}</span>\n                                <span className=\" flex mt-0 text-md font-normal\">{tokenBalance.name}</span>\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col align-center\">\n                            <h2 className=\"flex mt-4 text-md font-normal self-center\">{tokenBalance.balance / (10 ** tokenBalance.decimals)}</h2>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"absolute p-6 transition-opacity opacity-0 group-hover:opacity-100 group-hover:relative\">\n                    {\n                        dist && dist.distribution.length !== 0\n                            ?\n                            <h2 className=\"mt-2 text-2xl font-medium\">Asset distributed between {dist.distribution.length} beneficiaries</h2>\n                            :\n                            <h2 className=\"mt-2 text-2xl font-medium\">Asset not distributed</h2>\n                    }\n                    {\n                        dist && dist.distribution.length !== 0\n                            ?\n                            <p className=\"mt-2 font-bold\">Click to Edit</p>\n                            :\n                            <p className=\"mt-2 font-bold\">Click to distribute</p>\n                    }\n\n                </div>\n            </div>\n        </div>\n        </div >\n    )\n}\n\nexport default TokenAsset;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSelectedToken, selectTokenBalances, selectTokenDistribution } from '../features/tezos/selectors';\nimport { setSelectedToken } from '../features/tezos/slice';\nimport { AvailableToken, Beneficiary } from '../types';\nimport Distribution from './Distribution/Distribution';\nimport TokenAsset from './TokenAsset';\n\nconst Assets = () => {\n    const dispatch = useDispatch();\n    const selectedToken = useSelector(selectSelectedToken)\n    const userTokenBalances = useSelector(selectTokenBalances);\n    const tokenDistribution = useSelector(selectTokenDistribution);\n    const [beneficiaries, setBeneficiaries] = useState<Beneficiary[]>([]);\n    const [token, setToken] = useState<string>('');\n\n    const handleTokenAssetClick = (newToken: any) => {\n        if (token === newToken) return;\n        setToken(newToken);\n        dispatch(setSelectedToken(newToken));\n        if (tokenDistribution && tokenDistribution.length > 0) {\n            const tkDisIndex = tokenDistribution.findIndex((tk) => tk.tokenSymbol === newToken)\n            if (tkDisIndex < 0) {\n                setBeneficiaries([]);\n            } else {\n                setBeneficiaries(tokenDistribution[tkDisIndex].distribution)\n            }\n        } else {\n            setBeneficiaries([]);\n        }\n    }\n    return (\n        <div className='w-full h-screen bg-yellow-100 '>\n            <div className='flex flex-col h-full w-1/3 float-left border-blue-400 overflow-y-scroll'>\n                {\n                    userTokenBalances.map(tokenBalance => {\n                        return (\n                            <div key={tokenBalance.symbol} className={`flex flex-col`} onClick={() => handleTokenAssetClick(tokenBalance.symbol)}>\n                                <div>\n                                    <TokenAsset tokenBalance={tokenBalance} />\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className='flex w-2/3 h-full float-right '>\n                {selectedToken ?\n                    <div className=\"p-1 m-8 overflow-scroll w-full shadow-xl bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 rounded-2xl\">\n                        <a className=\"block h-full p-6 bg-yellow-100 rounded-xl \" >\n                            <div className=\"mt-16 \">\n                                <Distribution token={token as AvailableToken} beneficiaries={beneficiaries} setBeneficiaries={setBeneficiaries} />\n                            </div>\n                        </a>\n                    </div>\n\n                    :\n\n                    <div className=\"p-1 m-8 overflow-scroll w-full shadow-xl bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 rounded-2xl\">\n                        <div className=\"block h-full p-6 bg-yellow-100 rounded-xl \" >\n                            <div className=\"mt-24 \">\n                                <aside className=\"p-12\">\n                                    <div className=\"max-w-xl mx-auto text-center\">\n\n                                        <p className=\"mt-2 text-3xl font-bold sm:text-5xl\">\n                                            Select an asset to start\n                                        </p>\n                                    </div>\n                                </aside>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Assets;","import { useSelector } from \"react-redux\"\nimport Assets from \"../components/Assets\"\nimport Distribution from \"../components/Distribution/Distribution\"\nimport { selectSelectedToken } from \"../features/tezos/selectors\"\nimport { AvailableToken } from \"../types\"\n\nexport const Home = () => {\n    \n    return (\n        <div className=\"flex flex-row w-full\">\n            <Assets />\n        </div>\n    )\n}\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport { Home } from './pages/Home';\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    configureStore,\n    //getDefaultMiddleware,\n    combineReducers,\n} from \"@reduxjs/toolkit\";\nimport tezosReducer from \"../features/tezos/slice\";\n\nconst rootReducer = combineReducers({\n    tezos: tezosReducer\n})\nexport const store = configureStore({\n    reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}